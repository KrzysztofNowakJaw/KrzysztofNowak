---
title: "Music agency activities"
subtitle: "Summary for events organized between 2017-09-02 and 2018-03-04"

format:
  html:
    code-fold: true
    code-summary: "Show the code"
    toc: false
    toc-location: left
title-block-banner: true
title-block-banner-color: "white"

author: "Krzysztof Nowak"
name: "Krzysztof Nowak"
email: knowak1990@outlook.com

keywords: "Quarto,Data Analysis"
date: today
theme: Sandstone
---

```{r echo=FALSE ,warning=FALSE,error=FALSE,message = FALSE}
library(tidyverse)
library(gtExtras)
library(plotly)
library(gt)
library(scales)
library(patchwork)
library(ggtext)

Parties <- readRDS('Parties.RDS')
Clients <- readRDS('Clients.RDS')
Bands <- readRDS('Bands.RDS')
BandsStats <- readRDS('BandsStats.RDS')
```

```{r echo=FALSE ,warning=FALSE,error=FALSE,message = FALSE}
PartiesLocation <- Parties |>
  left_join(Clients)

PartiesLocation <- Parties |>
  left_join(Clients)


PartiesDates <- PartiesLocation |>
  mutate(Year = year(dzienrozpoczecia),
         Month = month(dzienrozpoczecia),
         miastoklienta = as.factor(miastoklienta),
         dayOfweek = weekdays(dzienrozpoczecia))


PartiesTrend <- PartiesDates |>
  summarise(PartiesN = n(),.by = c(stanzamklienta,miastoklienta)) |>
  mutate(Flag = 
           case_when(
           dense_rank(desc(PartiesN)) == 1 ~ 'steelblue',.default = 'lightgray'))


DaysTrend <- PartiesDates |>
  summarise(PartiesN = n(),.by = c(dayOfweek))

# Create a character vector for the weekdays
weekdays <- c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday")

# Convert it into an ordered factor
DaysTrend$dayOfweek <- factor(DaysTrend$dayOfweek, 
                          levels = c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"), ordered = TRUE)


BandsHeaders <- c("Band","Events","Total Contracts","Average contract",'Highest value')
names(BandsStats) <- BandsHeaders

BandsExp <- Bands |>
  slice_max(n = 1,order_by = `Daily Rate`,by = `Music Style`) |>
  select(`Music Style`,Band,`Daily Rate`,`Band City`) |>
  arrange(`Music Style`)

# Code block calculating the number of unique cities
NumberOfCities <- as.character(length(unique(PartiesLocation$miastoklienta)))
ContractsValue <- dollar(sum(PartiesLocation$wartosckontraktu))
PartiesN <- nrow(Parties)

Styles <- 
  Bands |>
  summarise(BandsPerCat = n(),.by = `Music Style`) |>
  arrange(desc(BandsPerCat)) |>
  mutate(Flag = case_when(dense_rank(desc(BandsPerCat)) == 1 ~ 'steelblue',.default = 'lightgray'))

```

## Summary

We had investigated statistics for **`r NumberOfCities`** cities for almost two years of available data.

Our agency organized **`r PartiesN`** events worth of **`r ContractsValue`**

::: {.panel-tabset .nav-pills}
## 

```{r,error=FALSE,message = FALSE,warning=FALSE,echo=FALSE}
BandsStats |>
  select(-c(Events)) |>
  arrange(desc(`Average contract`)) |>
  gt() |>
  tab_header(
  title = "Most expensive bands") |> 
  fmt_currency(columns = c("Total Contracts","Average contract",'Highest value')) |>
  gt_color_rows(2:4, palette = "ggsci::blue_material") |>
  tab_options(
    heading.subtitle.font.size = 12,
    heading.align = "left",
    table.border.top.color = "white",
    column_labels.border.bottom.color = "black",
    column_labels.border.bottom.width= px(3),
    table.align = "left"
  ) |>
  tab_source_note(md(" **Data**: Music agency"))
```

## About dataset

In this project, we use the dataset available in the book *SQL Queries for Mere Mortals Pearson uCertify Course and Labs Access Code Card, Fourth Edition: A Hands-On Guide to Data Manipulation in SQL* by John L. Viescas.
:::
